{"name":"RAdwords","tagline":"Loading Adwords Data into R","body":"## Loading Google Adwords data into R ##\r\n\r\n**RAdwords** is a R package with the aim to load Adwords data into R. Therefore the package implements three main features.\r\nFirst, the package provides an **authentication process** for **R** with the **Adwords API** via OAUTH2.\r\nSecond, the package offers an interface to apply the [Adwords query language](https://developers.google.com/adwords/api/docs/guides/awql) in R and **query the Adwords API** with [ad-hoc reports](https://developers.google.com/adwords/api/docs/guides/reporting).\r\nThird, the received **data are transformed into suitable data formats** for further data processing and data analysis.\r\n\r\n\r\n### Installation ###\r\n\r\nThe package can be installed directly from this Github repository with:\r\n\r\n`require(devtools)`  \r\n`install_github('jburkhardt/RAdwords')`\r\n\r\n\r\n### Usage ###\r\n\r\n#### Requirements: ####\r\nIn order to access the Adwords API you have to set up a [Google API project](https://developers.google.com/console/help/) for native apps. The Google API project provides a **Client Id** and **Client Secret** which is necessary for the authentication. Moreover you need to have a [Adwords MCC](https://developers.google.com/adwords/api/docs/signingup) with an **Adwords developer token**.\r\n\r\n#### Authentication: ####\r\nThe function `doAuth` manages the complete authentication process. Meaning `doAuth` authenticates the R app for the first time, loads the access token or refreshes the access token if expired. Hence, you only run `doAuth()` to authenticate whether it is your initial R Session or a later instance.\r\n\r\n##### What's happening in details? #####\r\nOnce the API projects for native application is set up, `getAuth` is able to authenticate the R app with the credentials (Client Id, Client Secret) from the Google API project. The Google authentication server returns a client token, which later is used by `loadToken` to receive the access token. If the access token is expired after one hour, it can be updated with `refreshToken`. The access token in combination with the Adwords developer token enables a connection with the Adwords API.\r\n\r\n#### Create Statement: ####\r\n`statement` creates the Adwords Query Language Statement.\r\n\r\n#### Loading Data: ####\r\n`getData` queries the data from the Adwords API and transforms the data into an R dataframe.\r\n\r\n### Example ###\r\n\r\n#### Authentication ####\r\n`library(RAdwords)`  \r\n`google_auth <- doAuth()`\r\n#### Create Statement ####\r\n`body <- statement(select=c('Clicks','AveragePosition','Cost','Ctr'),  \r\n                  report=\"ACCOUNT_PERFORMANCE_REPORT\",  \r\n                  start=\"20140320\",  \r\n                  end=\"20140321\")`  \r\n#### Query Adwords API and get data as dataframe ####\r\n`data <- getData(clientCustomerId='xxx-xxx-xxxx', google_auth=google_auth ,statement=body)`\r\n#### Get available report types ####\r\n`reports()`\r\n#### Get available metrics/attributes of specific report type ####\r\n`metrics(report='ACCOUNT_PERFORMANCE_REPORT')`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}